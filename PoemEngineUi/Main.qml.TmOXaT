import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15
import QtQuick.Controls.Material

Window {
    id: root
    width: 480
    height: 640
    title: qsTr("ËØóÂè•Ê£ÄÁ¥¢")

    visible: true
    Component.onCompleted: QtQuickControls2.style = "Material" // ËÆæÁΩÆÂÖ®Â±ÄÊ†∑Âºè‰∏∫ Material

    ColumnLayout {
        anchors.fill: parent
        anchors.margins: 16
        spacing: 12

        // È°∂ÈÉ®ÊêúÁ¥¢Ê†è
        RowLayout {
            Layout.fillWidth: true
            spacing: 8

            Label {
                text: "Ë©©È°å"
            }

            TextField {
                id: inputTitle
                padding: 4
                Layout.fillWidth: true
                placeholderText: "Ë©©È°å..."
                Layout.preferredHeight: 32

            }

            Label {
                text: "Ë®ÄÊï∏"
            }

            TextField {
                id: inputYan
                padding: 4
                placeholderText: "Á§∫‰æã: 5"
                Layout.preferredHeight: 32
                Layout.preferredWidth: 60
            }

            Label {
                text: "Âè•Êï∏"
            }

            TextField {
                id: inputJushu
                padding: 4
                placeholderText: "Á§∫‰æã: 8"
                Layout.preferredHeight: 32
                Layout.preferredWidth: 60

            }
        }
        // È°∂ÈÉ®ÊêúÁ¥¢Ê†è
        RowLayout {
            Layout.fillWidth: true
            spacing: 8

            Label {
                text: "‰ΩúËÄÖ"
            }

            TextField {
                id: inputAuthor
                padding: 4
                Layout.fillWidth: true
                placeholderText: "‰ΩúËÄÖ..."
                Layout.preferredHeight: 32

            }

            Label {
                text: "È´îË£Å"
            }

            TextField {
                id: inputTicai
                padding: 4
                placeholderText: "(ÂæãË©©)"
                Layout.preferredHeight: 32
                Layout.preferredWidth: 60

            }

            Label {
                text: "Âè•Â∫è"
            }

            TextField {
                id: inputJuind
                padding: 4
                placeholderText: "Á§∫‰æã: 1"
                Layout.preferredHeight: 32
                Layout.preferredWidth: 60

            }

        }

        // È°∂ÈÉ®ÊêúÁ¥¢Ê†è
        RowLayout {
            Layout.fillWidth: true
            spacing: 8

            Label {
                text: "Ë©©Âè•"
            }

            TextField {
                id: inputJu
                padding: 4
                Layout.fillWidth: true
                placeholderText: "Ëº∏ÂÖ•Ë©©Âè•..."
                Layout.preferredHeight: 32

            }

            Label {
                text: "Âπ≥‰ªÑ"
            }

            TextField {
                id: inputPz
                padding: 4
                Layout.fillWidth: true
                placeholderText: "Ëº∏ÂÖ•Âπ≥‰ªÑÊ†ºÂºè..."
                Layout.preferredHeight: 32

            }

            Button {
                text: "üîç"
                onClicked: {
                    // Ë∞ÉÁî® C++ ÊêúÁ¥¢ÈÄªËæë
                    interf.onQuery(inputJu.text,
                                 inputPz.text,
                                 inputTitle.text,
                                 inputAuthor.text,
                                 inputYan.text,
                                 inputJushu.text,
                                 inputTicai.text,
                                 inputJuind.text)
                    // poemManager.query(searchInput.text)
                }
                Layout.preferredHeight: 32
            }
        }

        // Ê®°Âºè + ÈÄâÈ°πÂå∫
        // ColumnLayout {
        //     spacing: 6

        //     RowLayout {
        //         Label { text: "Êü•Ë©¢Ê®°ÂºèÔºö" }
        //         ComboBox {
        //             id: modeSelect
        //             model: ["ÂÖ®ÈÉ®", "Ë©©Âè•", "Âπ≥‰ªÑ"]
        //             Layout.preferredHeight: 32
        //         }
        //     }

        //     ColumnLayout {
        //         CheckBox { id: opt2; text: "Á∞°ÁπÅ„ÄÅÁï∞È´îËΩâÊèõ"; checked: true }
        //     }
        // }

        // ÊªöÂä®ËßÜÂõæÂå∫Âüü
        ScrollView {
            id: scrollView
            Layout.fillWidth: true
            Layout.fillHeight: true
            ScrollBar.vertical.policy: ScrollBar.AlwaysOn  // Á°Æ‰øùÂßãÁªàÊòæÁ§∫ÊªöÂä®Êù°

            ListView {
                id: listView
                anchors.fill: parent
                model: interf.model
                spacing: 2
                clip: true

                delegate: Rectangle {
                    property string col7str: model.col7
                    property string col9str: model.col9
                    id: delegateItem
                    width: listView.width
                    height: 60
                    color: mouseArea.pressed ? "#e0e0e0" : "white"

                    // ÁÇπÂáªÊïàÊûú
                    MouseArea {
                        id: mouseArea
                        anchors.fill: parent
                        onClicked: {
                            popup.author = model.col0
                            popup.content = model.col1
                            popup.chulv = model.col2
                            popup.jushu = model.col3
                            popup.yan = model.col4
                            popup.title = model.col5
                            popup.ticai = model.col6
                            popup.ju = model.col7
                            popup.juind = model.col8
                            popup.pz = model.col9
                            popup.open()
                        }
                    }

                    RowLayout {
                        anchors.fill: parent
                        spacing: 10

                        // Â∑¶‰æßÂ§ßÂ≠ó‰Ωì
                        Text {
                            textFormat: Text.RichText
                            font.pixelSize: 20
                            font.bold: true
                            text: {
                                var str = ""
                                for (var i = 0; i < model.col7.length; ++i) {
                                    var c = model.col7.charAt(i)
                                    var color = model.col9.charAt(i) === "‰ªÑ" ? "#C55A11" : "#3B3838"
                                    str += "<span style='color:" + color + "'>" + c + "</span>"
                                }
                                return str
                            }
                            Layout.fillHeight: true
                            Layout.preferredWidth: 140
                            verticalAlignment: Text.AlignVCenter
                        }

                        // Text {
                            // text: model.col7
                            // font.pixelSize: 20
                            // font.bold: true
                            // Layout.leftMargin: 10
                            // Layout.fillHeight: true
                            // Layout.preferredWidth: 140
                            // verticalAlignment: Text.AlignVCenter
                        // }

                        // Âè≥‰æß‰∏ä‰∏ãÂ∏ÉÂ±Ä
                        ColumnLayout {
                            Layout.fillWidth: true
                            Layout.fillHeight: true
                            spacing: 2

                            RowLayout {
                                Layout.fillWidth: true
                                Layout.fillHeight: true
                                Text {
                                    text: model.col0 + " „Ää" + model.col5 + "„Äã"
                                    font.pixelSize: 14
                                    font.bold: true
                                    color: "#444444"
                                    Layout.alignment: Qt.AlignLeft | Qt.AlignVCenter
                                    Layout.fillHeight: true
                                }
                            }

                            RowLayout {
                                Layout.fillWidth: true
                                Layout.fillHeight: true
                                Text {
                                    text: "È´îË£ÅÔºö" + model.col6
                                    font.pixelSize: 14
                                    color: "#444444"
                                    Layout.alignment: Qt.AlignLeft | Qt.AlignVCenter
                                    Layout.preferredWidth: 80
                                    Layout.fillHeight: true
                                }
                                Text {
                                    text: "Á¨¨" + model.col8 + "Âè•"
                                    font.pixelSize: 14
                                    color: "#444444"
                                    Layout.alignment: Qt.AlignLeft | Qt.AlignVCenter
                                    Layout.fillWidth: true
                                    Layout.fillHeight: true
                                }
                            }
                        }
                    }

                    // ÂàÜÂâ≤Á∫ø
                    Rectangle {
                        width: parent.width
                        height: 1
                        color: "#eee"
                        anchors.bottom: parent.bottom
                    }
                }
            }
        }
        // TableView {
        //     id: tableView
        //     Layout.fillWidth: true
        //     Layout.fillHeight: true
        //     // selectionBehavior: TableView.SelectRows
        //     // selectionMode: TableView.SingleSelection
        //     // horizontalScrollBarPolicy: ScrollBar.AlwaysOff
        //     // ScrollBar.horizontal.policy: ScrollBar.AlwaysOff  // Á¶ÅÁî®Ê∞¥Âπ≥ÊªöÂä®
        //     // ScrollBar.vertical.policy: ScrollBar.AlwaysOn     // ÂßãÁªàÊòæÁ§∫ÂûÇÁõ¥ÊªöÂä®Êù°
        //     // Ëá™Âä®ÂàóÂÆΩÈÖçÁΩÆ
        //     // columnWidthProvider: function(column) {
        //     //     return width / columnCount;
        //     // }
        //     delegate: Rectangle {
        //         required property bool selected
        //         // implicitWidth: 150
        //         // implicitWidth: textItem.implicitWidth + 20
        //         implicitHeight: 30
        //         border.width: 0.5
        //         border.color: "#bbbbbb"
        //         color: "transparent"

        //         Text {
        //             text: display
        //             anchors.centerIn: parent
        //         }
        //     }

        //     columnWidthProvider: function(column) {
        //         switch(column)
        //         {
        //         case 0:
        //             return 120;
        //         case 1:
        //             return 200;
        //         case 2:
        //             return 80;
        //         }
        //     }

        //     model: interf.model
        // }
        // Êü•ËØ¢ÁªìÊûúÂ±ïÁ§∫Âå∫
        // ScrollView {
        //     Layout.fillWidth: true
        //     Layout.fillHeight: true
        //     ScrollBar.horizontal.policy: ScrollBar.AlwaysOff  // Á¶ÅÁî®Ê∞¥Âπ≥ÊªöÂä®
        //     ScrollBar.vertical.policy: ScrollBar.AlwaysOn     // ÂßãÁªàÊòæÁ§∫ÂûÇÁõ¥ÊªöÂä®Êù°

        //     Rectangle {
        //         id: resultArea
        //         width: parent.width

        //         Column {
        //             spacing: 12
        //             Repeater {
        //                 model: resultModel
        //                 delegate: Rectangle {
        //                     width: parent.width
        //                     height: 100
        //                     radius: 8
        //                     color: "#ffffff"
        //                     border.color: "#cccccc"
        //                     border.width: 1

        //                     Text {
        //                         text: model.character + " - " + model.reading
        //                         font.pointSize: 16
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }

        // ËøõÂ∫¶Êù°‰∏éÁä∂ÊÄÅÊ†áÁ≠æ
        RowLayout {
            Layout.fillWidth: true
            visible: bar.visible

            // ProgressBar {
            //     id: bar
            //     Layout.fillWidth: true
            //     value: 0.0
            // }

            Label {
                id: lab
                text: interf.labText
                horizontalAlignment: Text.AlignRight
            }
        }
    }

    Popup {
        id: popup
        modal: true
        focus: true

        width: parent.width * 4 / 5
        anchors.centerIn: Overlay.overlay  // ‚úÖ ÂßãÁªàÂ±Ö‰∏≠

        // Êï∞ÊçÆÂ±ûÊÄß
        property string author: ""
        property string content: ""
        property string chulv: ""
        property string jushu: ""
        property string yan: ""
        property string title: ""
        property string ticai: ""
        property string ju: ""
        property string juind: ""
        property string pz: ""

        // ÂØåÊñáÊú¨ÂÜÖÂÆπÔºöÂ∞Ü ju Âä†Á≤ó
        property string richContent: {
            const lines = []
            const regex = /[^Ôºå„ÄÇÔºüÔºÅÔºõ]+[Ôºå„ÄÇÔºüÔºÅÔºõ]/g
            const matches = popup.content.match(regex) || []
            const maxGroup = 5

            let i = 0
            while (i < matches.length) {
                let current = matches[i]
                const endChar = current.slice(-1)

                // Case A: ÂΩìÂâçÊòØÈÄóÂè∑Ôºå‰∏ã‰∏ÄÂè•‰∏çÊòØÈÄóÂè∑ÁªìÂ∞æ ‚Üí ÂêàÂπ∂ i Âíå i+1
                if (endChar === "Ôºå" && i + 1 < matches.length && matches[i + 1].slice(-1) !== "Ôºå") {
                    current += matches[i + 1]
                    i += 2
                }
                // Case B: ËøûÁª≠Âè•ÈùûÂè•Âè∑ÁªìÂ∞æÔºåÊúÄÂ§öÂêàÂπ∂5Âè•ÔºåÁõ¥Âà∞Âè•Âè∑
                else {
                    let group = current
                    let j = i + 1
                    while (j < matches.length && j - i < maxGroup && matches[j - 1].slice(-1) !== "„ÄÇ" && matches[j].slice(-1) !== "„ÄÇ") {
                        group += matches[j]
                        j += 1
                    }
                    // Ê£ÄÊü•ÊòØÂê¶ÊúÄÂêé‰∏ÄÂè•ÊòØÂè•Âè∑ÁªìÂ∞æ
                    if (j < matches.length && matches[j].slice(-1) === "„ÄÇ") {
                        group += matches[j]
                        j += 1
                    }
                    current = group
                    i = j
                }

                lines.push(current)
            }
            let joined = lines.join("<br/>")
            if (popup.ju.length === 0) return joined
            return joined.replace(popup.ju, "<b>" + popup.ju + "</b>")
            // return popup.content
        }

        // Ëá™Âä®È´òÂ∫¶ÔºàÁî± Layout Ëá™Âä®ÂÜ≥ÂÆöÔºâ
        contentItem: ColumnLayout {
            anchors.fill: parent
            anchors.margins: 16
            spacing: 12

            // Á¨¨‰∏ÄÈÉ®ÂàÜÔºöÊ†áÈ¢òÔºåÂ±Ö‰∏≠ÊòæÁ§∫
            Text {
                text: popup.author + " „Ää" + popup.title + "„Äã"
                font.pixelSize: 14
                font.bold: true
                horizontalAlignment: Text.AlignHCenter
                Layout.alignment: Qt.AlignHCenter
                Layout.preferredWidth: popup.width - 32
                wrapMode: Text.Wrap
            }

            // Á¨¨‰∫åÈÉ®ÂàÜÔºöÂØåÊñáÊú¨ÔºåËá™Âä®Êç¢Ë°åÔºåÈôêÂà∂ÂÆΩÂ∫¶
            Text {
                textFormat: Text.RichText
                text: popup.richContent
                horizontalAlignment: Text.AlignHCenter
                Layout.alignment: Qt.AlignHCenter
                wrapMode: Text.Wrap
                font.pixelSize: 16
                Layout.preferredWidth: popup.width - 32
            }
        }
    }

    // Drawer {
    //     id: drawer
    //     width: root.width * 0.33
    //     height: root.height

    //     Column {
    //         anchors.fill: parent

    //         ItemDelegate {
    //             text: qsTr("Page 1")
    //             width: parent.width
    //             onClicked: {
    //                 stackView.push("Screen01.ui.qml")
    //                 drawer.close()
    //             }
    //         }
    //         ItemDelegate {
    //             text: qsTr("Page 2")
    //             width: parent.width
    //             onClicked: {
    //                 stackView.push("Screen02.ui.qml")
    //                 drawer.close()
    //             }
    //         }
    //     }
    // }
}

